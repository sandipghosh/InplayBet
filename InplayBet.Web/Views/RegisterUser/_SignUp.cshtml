@using InplayBet.Web.Models
@model UserModel
@{
    Layout = null;
}
@using (Ajax.BeginForm("SignUp", "RegisterUser", new AjaxOptions
    {
        HttpMethod = "POST",
        OnBegin = "SignUpBeforeSendHandler(this)",
        OnSuccess = "SignUpSuccessHandler(data, this)",
        OnComplete = "SignUpCompletionHandler(this)"
    }, new { id = "frmSignUp" }))
{
    <ul class="query-list">
        <li>
            @if (Model.UserKey > 0)
            {
                <label>User Id:</label>
                <span>@Model.UserId</span>
                @Html.HiddenFor(m => m.UserId)
            }
            else
            {
                <label>User Id: (must be alpha numeric and minimum length 8)</label>
                @Html.ValidationMessageFor(m => m.FirstName)
                @Html.TextBoxFor(m => m.UserId)
            }
        </li>
        <li>
            <label>First Name:</label>
            @Html.ValidationMessageFor(m => m.FirstName)
            @Html.TextBoxFor(m => m.FirstName)
        </li>
        <li>
            <label>Last Name:</label>
            @Html.ValidationMessageFor(x => x.LastName)
            @Html.TextBoxFor(m => m.LastName)
        </li>
        <li>
            <label>Email Address:</label>
            @if (Model.UserKey > 0)
            {
                <span>@Model.EmailId</span>
                @Html.HiddenFor(m => m.EmailId)
            }
            else
            {
                @Html.ValidationMessageFor(x => x.EmailId)
                @Html.TextBoxFor(m => m.EmailId)
            }
        </li>
        <li>
            <label>Currency:</label>
            @Html.ValidationMessageFor(x => x.CurrencyId)
            @Html.DropDownListFor(m => m.CurrencyId, (IEnumerable<SelectListItem>)ViewBag.Currencies, "Select Currency", null)
        </li>
        <li>
            <div class="password">
                <label>Password</label>
                @Html.ValidationMessageFor(m => m.Password)
                @Html.TextBoxFor(m => m.Password, new { type = "password" })
            </div>
            <div class="confirmpassword">
                <label>Confirm Password</label>
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
                @Html.TextBox("ConfirmPassword", "", new { type = "password" })
            </div>
        </li>
        <li>
            <label>I am:</label>
            @Html.ValidationMessageFor(m => m.Sex)
            @Html.DropDownListFor(m => m.Sex, (IEnumerable<SelectListItem>)ViewBag.Sex, "Select Sex", null)
        </li>
        <li>
            <label>Date of birth:</label>
            @Html.ValidationMessageFor(m => m.DobMonth)
            @Html.DropDownListFor(m => m.DobMonth, (IEnumerable<SelectListItem>)ViewBag.Months, "Select Month", null)

            @Html.ValidationMessageFor(m => m.DobDay)
            @Html.DropDownListFor(m => m.DobDay, (IEnumerable<SelectListItem>)ViewBag.Days, "Select Date", null)

            @Html.ValidationMessageFor(m => m.DobYear)
            @Html.DropDownListFor(m => m.DobYear, (IEnumerable<SelectListItem>)ViewBag.Years, "Select Year", null)
        </li>
        <li>
            <label>Bookmaker:</label>
            @Html.DropDownListFor(m => m.BookMakerId, (IEnumerable<SelectListItem>)ViewBag.BookMakers)
        </li>
        <li>
            <input name="" value="submit" type="submit">
        </li>
    </ul>

    @Html.HiddenFor(m => m.UserKey)
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.AvatarPath)
    @Html.HiddenFor(m => m.StatusId)
    @Html.HiddenFor(m => m.CreatedOn)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.HiddenFor(m => m.IsAdmin)
    @Html.HiddenFor(m => m.UpdatedBy)
    @Html.HiddenFor(m => m.UpdatedOn)
}