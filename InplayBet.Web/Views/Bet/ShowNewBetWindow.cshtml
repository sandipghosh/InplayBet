@using InplayBet.Web.Models
@using InplayBet.Web.Models.Base
@model BetModel
@{
    Layout = null;
    string betDisplayMode = (string)(ViewBag.BetDisplayMode ?? ViewData["BetDisplayMode"]);
}
@if (betDisplayMode == BetDisplayType.Insert.ToString())
{
    using (Ajax.BeginForm("InsertNewBet", "Bet", new AjaxOptions { HttpMethod = "POST" }, new { id = "frmBet" }))
    {
    <div class="popup-border">
        <ul class="popup">
            <li>
                <p>Bet @Model.BetNumber.ToString()</p>
            </li>
            <li>
                <label>Team Names:</label>
                @Html.HiddenFor(m => m.TeamAId)
                <input type="text" name="" id="txtTesmA" value="">
                <a href="#" class="btn">+</a>
                <span>vs</span>
                @Html.HiddenFor(m => m.TeamBId)
                <input type="text" name="" id="txtTesmB" value="">
                <a href="#" class="btn">+</a>
            </li>
            <li>
                <label>league:</label>
                @Html.HiddenFor(m => m.LegueId)
                <input type="text" name="" id="txtLegue" class="full" value="">
                <a href="#" class="btn">+</a>
            </li>
            <li>
                <label>Bet Type:</label>
                @Html.TextBoxFor(m => m.BetType, new { @class = "full" })
            </li>
            <li>
                <label>Odds:</label>
                @Html.TextBoxFor(m => m.Odds, new { @class = "full" })
            </li>
            <li>
                <label>Amount Placed:</label>
                @Html.TextBoxFor(m => m.BetPlaced, new { @class = "full" })
            </li>
            <li>
                <label>Winning Total:</label>
                @Html.TextBoxFor(m => m.WiningTotal, new { @class = "full" })
            </li>
            <li>
                <input type="submit" value="submit" name="">
            </li>
        </ul>
    </div>

    @Html.HiddenFor(m => m.BetId)
    @Html.HiddenFor(m => m.ChallengeId)
    @Html.HiddenFor(m => m.BetNumber)
    @Html.HiddenFor(m => m.StatusId)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.HiddenFor(m => m.CreatedOn)

    @Html.HiddenFor(m => m.Challenge.ChallengeId)
    @Html.HiddenFor(m => m.Challenge.ChallengeNumber)
    @Html.HiddenFor(m => m.Challenge.ChallengeStatus)
    @Html.HiddenFor(m => m.Challenge.CreatedBy)
    @Html.HiddenFor(m => m.Challenge.CreatedOn)
    }
}
else
{
    using (Ajax.BeginForm("UpdateBetStatus", "Bet", new AjaxOptions { HttpMethod = "POST" }, new { id = "frmBetStatus" }))
    {
    <div class="popup-border">
        <ul class="popup">
            <li>
                <p>Bet @Model.BetNumber.ToString()</p>
            </li>
            <li>
                <label><strong>Team Names:</strong></label>
                @Html.HiddenFor(m => m.TeamAId)
                @Html.Label(Model.TeamA.TeamName)
                <label><strong>vs</strong></label>
                @Html.HiddenFor(m => m.TeamBId)
                @Html.Label(Model.TeamB.TeamName)
            </li>
            <li>
                <label><strong>league:</strong></label>
                @Html.HiddenFor(m => m.LegueId)
                @Html.Label(Model.Legue.LegueName)
            </li>
            <li>
                <label><strong>Bet Type:</strong></label>
                @Html.Label(Model.BetType)
            </li>
            <li>
                <label><strong>Odds:</strong></label>
                @Html.Label(Model.Odds)
            </li>
            <li>
                <label><strong>Amount Placed:</strong></label>
                <label>@Model.BetPlaced.ToString("C")</label>
            </li>
            <li>
                <label><strong>Winning Total:</strong></label>
                <label>@Model.WiningTotal.ToString("C")</label>
            </li>

            @if (betDisplayMode == BetDisplayType.Update.ToString())
            {
                <li>
                    <label>Bet Submited On: @Model.CreatedOn.ToString("dd/MM/yyyy hh:mm tt")</label>
                </li>
                <li>
                    <input type="submit" value="@StatusCode.Won.ToString()" name="BetStatus"/>
                    <input type="submit" value="@StatusCode.Lost.ToString()" name="BetStatus"/>
                </li>
            }
            else if (betDisplayMode == BetDisplayType.Read.ToString())
            {
                <li>
                    <label>Bet Submited On: @Model.CreatedOn.ToString("dd/MM/yyyy hh:mm tt")</label>
                </li>
                <li>
                    <label>Bet @Html.Label(Model.BetStatus) On: @Model.UpdatedOn.ToString("dd/MM/yyyy hh:mm tt")</label>
                </li>
                <li>
                    <label><strong>Status:</strong></label>
                    <label>@Html.Label(Model.BetStatus)</label>
                </li>
            }

        </ul>

    </div>

    @Html.HiddenFor(m => m.BetId)
    @Html.HiddenFor(m => m.ChallengeId)
    @Html.HiddenFor(m => m.BetNumber)
    @Html.HiddenFor(m => m.StatusId)
    @Html.HiddenFor(m => m.CreatedBy)
    @Html.HiddenFor(m => m.CreatedOn)
    }
}