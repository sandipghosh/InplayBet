@using InplayBet.Web.Models
@using InplayBet.Web.Models.Base
@using System.Globalization
@model BetModel
@{
    Layout = null;
    string cultureCode = (string)(ViewBag.CultureCode ?? ViewData["CultureCode"]);
    string betDisplayMode = (string)(ViewBag.BetDisplayMode ?? ViewData["BetDisplayMode"]);
    string currencySymbol = (!string.IsNullOrEmpty(cultureCode)) ?
        (new CultureInfo(cultureCode)).NumberFormat.CurrencySymbol : "";
}
@if (betDisplayMode == BetDisplayType.Insert.ToString())
{
    using (Ajax.BeginForm("InsertNewBet", "Bet", new { area = "" }, new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "InsertUpdateBetSuccessHandler(data, this)"
    }, new { id = "frmInsertBet" }))
    {
        <div class="popup-border">
            <ul class="popup">
                <li>
                    <p>Bet @Model.BetNumber.ToString()</p>
                </li>
                <li>
                    <label><strong>Team Names:</strong></label>
                    <div class="left-input">
                        @Html.HiddenFor(m => m.TeamAId)
                        @Html.TextBoxFor(m => m.TeamAName, new { id = "txtTesmA" })
                        <a href="javascript:void();" class="btn">+</a>
                    </div>
                    <span class="vs">vs</span>
                    <div class="left-input">
                        @Html.HiddenFor(m => m.TeamBId)
                        @Html.TextBoxFor(m => m.TeamBName, new { id = "txtTesmB" })
                        <a href="javascript:void();" class="btn">+</a>
                    </div>
                </li>
                <li>
                    <label><strong>League:</strong></label>
                    <div class="input-full-outer">
                        @Html.HiddenFor(m => m.LegueId)
                        @Html.TextBoxFor(m => m.LegueName, new { id = "txtLegue", @class = "full" })
                        <a href="javascript:void();" class="btn">+</a>
                    </div>
                </li>
                <li>
                    <label><strong>Bet Type:</strong></label>
                    <div class="input-full-outer">@Html.TextBoxFor(m => m.BetType, new { @class = "full" })</div>
                </li>
                <li>
                    <label><strong>Odds:</strong></label>
                    <div class="input-full-outer">@Html.TextBoxFor(m => m.Odds, new { @class = "full" })</div>
                </li>
                <li>
                    <label><strong>Amount Placed:</strong></label>
                    <div class="input-full-outer">@Html.TextBoxFor(m => m.BetPlaced, new { @class = "full", @readonly = true, Value = Model.BetPlaced.ToString("C", new CultureInfo(cultureCode)) })</div>
                </li>
                <li>
                    <label><strong>Winning Total:</strong></label>
                    <div class="input-full-outer">@Html.TextBoxFor(m => m.WiningTotal, new { @class = "full", @readonly = true, Value = Model.WiningTotal.ToString("C", new CultureInfo(cultureCode)) })</div>
                </li>
                <li>
                    <input type="submit" value="submit" name="">
                </li>
                <li>(Please click the "+" button to add your text to our preditctive text database)</li>
            </ul>
        </div>

        @Html.HiddenFor(m => m.BetId)
        @Html.HiddenFor(m => m.ChallengeId)
        @Html.HiddenFor(m => m.BetNumber)
        @Html.HiddenFor(m => m.BetStatus)
        @Html.HiddenFor(m => m.StatusId)
        @Html.HiddenFor(m => m.CreatedBy)
        @Html.HiddenFor(m => m.CreatedOn)

        @Html.HiddenFor(m => m.Challenge.ChallengeId)
        @Html.HiddenFor(m => m.Challenge.ChallengeNumber)
        @Html.HiddenFor(m => m.Challenge.ChallengeStatus)
        @Html.HiddenFor(m => m.Challenge.UserKey)
        @Html.HiddenFor(m => m.Challenge.WiningPrice)
        @Html.HiddenFor(m => m.Challenge.CreatedBy)
        @Html.HiddenFor(m => m.Challenge.CreatedOn)
        @Html.HiddenFor(m => m.Challenge.StatusId)
        @Html.Hidden("currencySymbol", currencySymbol)
    }
}
else
{
    using (Ajax.BeginForm("UpdateBetStatus", "Bet", new { area = "" }, new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "InsertUpdateBetSuccessHandler(data, this)"
    }, new { id = "frmUpdateBet" }))
    {
        <div class="popup-border">
            <ul class="popup">
                <li>
                    <p>Bet @Model.BetNumber.ToString()</p>
                </li>
                <li>
                    <label><strong>Team Names:</strong></label>
                    <label class="right" style="width:30%;">@Model.TeamA.TeamName</label>
                    <label class="vs"><strong>vs</strong></label>
                    <label class="right" style="width:30%; text-align:center;">@Model.TeamB.TeamName</label>
                </li>
                <li>
                    <label><strong>League:</strong></label>
                    <label class="right">@Model.Legue.LegueName</label>
                </li>
                <li>
                    <label><strong>Bet Type:</strong></label>
                    <label class="right">@Model.BetType</label>
                </li>
                <li>
                    <label><strong>Odds:</strong></label>
                    @Html.Label(Model.Odds, new { @class = "right" })
                </li>
                <li>
                    <label><strong>Amount Placed:</strong></label>
                    <label class="right">@Model.BetPlaced.ToString("C", (new CultureInfo(cultureCode)))</label>
                </li>
                <li>

                    <label><strong>Winning Total:</strong></label>
                    <label class="right">@Model.WiningTotal.ToString("C", (new CultureInfo(cultureCode)))</label>
                </li>

                @if (betDisplayMode == BetDisplayType.Update.ToString())
                {
                    <li>
                        <label><strong>Bet Submited On:</strong></label>
                        <label class="right">@Model.CreatedOn.ToString("hh:mm tt", (new CultureInfo(cultureCode)))</label>
                    </li>
                    <li>
                        <input type="submit" value="@StatusCode.Won.ToString()" name="BetStatus" />
                        <input type="submit" value="@StatusCode.Lost.ToString()" name="BetStatus" />
                    </li>
                }
                else if (betDisplayMode == BetDisplayType.Read.ToString())
                {
                    <li>
                        <label><strong>Bet Submited On:</strong></label>
                        <label class="right">@Model.CreatedOn.ToString("dd/MM/yyyy hh:mm tt", (new CultureInfo(cultureCode)))</label>
                    </li>
                    <li>
                        <label><strong>Status:</strong></label>
                        <label>@Html.Label(Model.BetStatus)</label>
                    </li>
                }

            </ul>
        </div>

        @Html.HiddenFor(m => m.BetId)
        @Html.HiddenFor(m => m.TeamAId)
        @Html.HiddenFor(m => m.TeamBId)
        @Html.HiddenFor(m => m.LegueId)
        @Html.HiddenFor(m => m.ChallengeId)
        @Html.HiddenFor(m => m.BetType)
        @Html.HiddenFor(m => m.BetNumber)
        @Html.HiddenFor(m => m.Odds)
        @Html.HiddenFor(m => m.BetStatus)
        @Html.HiddenFor(m => m.BetPlaced)
        @Html.HiddenFor(m => m.WiningTotal)
        @Html.HiddenFor(m => m.StatusId)
        @Html.HiddenFor(m => m.CreatedBy)
        @Html.HiddenFor(m => m.CreatedOn)
    }
}